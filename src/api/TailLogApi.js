/**
 * dotCMS REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import EventOutput from '../model/EventOutput';

/**
* TailLog service.
* @module api/TailLogApi
* @version 3
*/
export default class TailLogApi {

    /**
    * Constructs a new TailLogApi. 
    * @alias module:api/TailLogApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getLogs operation.
     * @callback module:api/TailLogApi~getLogsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EventOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} fileName 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.linesBack 
     * @param {module:api/TailLogApi~getLogsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EventOutput}
     */
    getLogs(fileName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'fileName' is set
      if (fileName === undefined || fileName === null) {
        throw new Error("Missing the required parameter 'fileName' when calling getLogs");
      }

      let pathParams = {
        'fileName': fileName
      };
      let queryParams = {
        'linesBack': opts['linesBack']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/event-stream'];
      let returnType = EventOutput;
      return this.apiClient.callApi(
        '/v1/logs/{fileName}/_tail', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
