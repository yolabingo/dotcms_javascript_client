/**
 * dotCMS REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WorkflowAction model module.
 * @module model/WorkflowAction
 * @version 3
 */
class WorkflowAction {
    /**
     * Constructs a new <code>WorkflowAction</code>.
     * @alias module:model/WorkflowAction
     */
    constructor() { 
        
        WorkflowAction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WorkflowAction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkflowAction} obj Optional instance to populate.
     * @return {module:model/WorkflowAction} The populated <code>WorkflowAction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkflowAction();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('schemeId')) {
                obj['schemeId'] = ApiClient.convertToType(data['schemeId'], 'String');
            }
            if (data.hasOwnProperty('condition')) {
                obj['condition'] = ApiClient.convertToType(data['condition'], 'String');
            }
            if (data.hasOwnProperty('nextStep')) {
                obj['nextStep'] = ApiClient.convertToType(data['nextStep'], 'String');
            }
            if (data.hasOwnProperty('nextAssign')) {
                obj['nextAssign'] = ApiClient.convertToType(data['nextAssign'], 'String');
            }
            if (data.hasOwnProperty('icon')) {
                obj['icon'] = ApiClient.convertToType(data['icon'], 'String');
            }
            if (data.hasOwnProperty('roleHierarchyForAssign')) {
                obj['roleHierarchyForAssign'] = ApiClient.convertToType(data['roleHierarchyForAssign'], 'Boolean');
            }
            if (data.hasOwnProperty('assignable')) {
                obj['assignable'] = ApiClient.convertToType(data['assignable'], 'Boolean');
            }
            if (data.hasOwnProperty('commentable')) {
                obj['commentable'] = ApiClient.convertToType(data['commentable'], 'Boolean');
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], 'Number');
            }
            if (data.hasOwnProperty('saveActionlet')) {
                obj['saveActionlet'] = ApiClient.convertToType(data['saveActionlet'], 'Boolean');
            }
            if (data.hasOwnProperty('publishActionlet')) {
                obj['publishActionlet'] = ApiClient.convertToType(data['publishActionlet'], 'Boolean');
            }
            if (data.hasOwnProperty('unpublishActionlet')) {
                obj['unpublishActionlet'] = ApiClient.convertToType(data['unpublishActionlet'], 'Boolean');
            }
            if (data.hasOwnProperty('archiveActionlet')) {
                obj['archiveActionlet'] = ApiClient.convertToType(data['archiveActionlet'], 'Boolean');
            }
            if (data.hasOwnProperty('pushPublishActionlet')) {
                obj['pushPublishActionlet'] = ApiClient.convertToType(data['pushPublishActionlet'], 'Boolean');
            }
            if (data.hasOwnProperty('unarchiveActionlet')) {
                obj['unarchiveActionlet'] = ApiClient.convertToType(data['unarchiveActionlet'], 'Boolean');
            }
            if (data.hasOwnProperty('deleteActionlet')) {
                obj['deleteActionlet'] = ApiClient.convertToType(data['deleteActionlet'], 'Boolean');
            }
            if (data.hasOwnProperty('destroyActionlet')) {
                obj['destroyActionlet'] = ApiClient.convertToType(data['destroyActionlet'], 'Boolean');
            }
            if (data.hasOwnProperty('moveActionlet')) {
                obj['moveActionlet'] = ApiClient.convertToType(data['moveActionlet'], 'Boolean');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
            }
            if (data.hasOwnProperty('moveActionletHashPath')) {
                obj['moveActionletHashPath'] = ApiClient.convertToType(data['moveActionletHashPath'], 'Boolean');
            }
            if (data.hasOwnProperty('nextStepCurrentStep')) {
                obj['nextStepCurrentStep'] = ApiClient.convertToType(data['nextStepCurrentStep'], 'Boolean');
            }
            if (data.hasOwnProperty('showOn')) {
                obj['showOn'] = ApiClient.convertToType(data['showOn'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkflowAction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkflowAction</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['schemeId'] && !(typeof data['schemeId'] === 'string' || data['schemeId'] instanceof String)) {
            throw new Error("Expected the field `schemeId` to be a primitive type in the JSON string but got " + data['schemeId']);
        }
        // ensure the json data is a string
        if (data['condition'] && !(typeof data['condition'] === 'string' || data['condition'] instanceof String)) {
            throw new Error("Expected the field `condition` to be a primitive type in the JSON string but got " + data['condition']);
        }
        // ensure the json data is a string
        if (data['nextStep'] && !(typeof data['nextStep'] === 'string' || data['nextStep'] instanceof String)) {
            throw new Error("Expected the field `nextStep` to be a primitive type in the JSON string but got " + data['nextStep']);
        }
        // ensure the json data is a string
        if (data['nextAssign'] && !(typeof data['nextAssign'] === 'string' || data['nextAssign'] instanceof String)) {
            throw new Error("Expected the field `nextAssign` to be a primitive type in the JSON string but got " + data['nextAssign']);
        }
        // ensure the json data is a string
        if (data['icon'] && !(typeof data['icon'] === 'string' || data['icon'] instanceof String)) {
            throw new Error("Expected the field `icon` to be a primitive type in the JSON string but got " + data['icon']);
        }
        // ensure the json data is a string
        if (data['owner'] && !(typeof data['owner'] === 'string' || data['owner'] instanceof String)) {
            throw new Error("Expected the field `owner` to be a primitive type in the JSON string but got " + data['owner']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['showOn'])) {
            throw new Error("Expected the field `showOn` to be an array in the JSON data but got " + data['showOn']);
        }

        return true;
    }


}



/**
 * @member {String} id
 */
WorkflowAction.prototype['id'] = undefined;

/**
 * @member {String} name
 */
WorkflowAction.prototype['name'] = undefined;

/**
 * @member {String} schemeId
 */
WorkflowAction.prototype['schemeId'] = undefined;

/**
 * @member {String} condition
 */
WorkflowAction.prototype['condition'] = undefined;

/**
 * @member {String} nextStep
 */
WorkflowAction.prototype['nextStep'] = undefined;

/**
 * @member {String} nextAssign
 */
WorkflowAction.prototype['nextAssign'] = undefined;

/**
 * @member {String} icon
 */
WorkflowAction.prototype['icon'] = undefined;

/**
 * @member {Boolean} roleHierarchyForAssign
 */
WorkflowAction.prototype['roleHierarchyForAssign'] = undefined;

/**
 * @member {Boolean} assignable
 */
WorkflowAction.prototype['assignable'] = undefined;

/**
 * @member {Boolean} commentable
 */
WorkflowAction.prototype['commentable'] = undefined;

/**
 * @member {Number} order
 */
WorkflowAction.prototype['order'] = undefined;

/**
 * @member {Boolean} saveActionlet
 */
WorkflowAction.prototype['saveActionlet'] = undefined;

/**
 * @member {Boolean} publishActionlet
 */
WorkflowAction.prototype['publishActionlet'] = undefined;

/**
 * @member {Boolean} unpublishActionlet
 */
WorkflowAction.prototype['unpublishActionlet'] = undefined;

/**
 * @member {Boolean} archiveActionlet
 */
WorkflowAction.prototype['archiveActionlet'] = undefined;

/**
 * @member {Boolean} pushPublishActionlet
 */
WorkflowAction.prototype['pushPublishActionlet'] = undefined;

/**
 * @member {Boolean} unarchiveActionlet
 */
WorkflowAction.prototype['unarchiveActionlet'] = undefined;

/**
 * @member {Boolean} deleteActionlet
 */
WorkflowAction.prototype['deleteActionlet'] = undefined;

/**
 * @member {Boolean} destroyActionlet
 */
WorkflowAction.prototype['destroyActionlet'] = undefined;

/**
 * @member {Boolean} moveActionlet
 */
WorkflowAction.prototype['moveActionlet'] = undefined;

/**
 * @member {String} owner
 */
WorkflowAction.prototype['owner'] = undefined;

/**
 * @member {Boolean} moveActionletHashPath
 */
WorkflowAction.prototype['moveActionletHashPath'] = undefined;

/**
 * @member {Boolean} nextStepCurrentStep
 */
WorkflowAction.prototype['nextStepCurrentStep'] = undefined;

/**
 * @member {Array.<module:model/WorkflowAction.ShowOnEnum>} showOn
 */
WorkflowAction.prototype['showOn'] = undefined;





/**
 * Allowed values for the <code>showOn</code> property.
 * @enum {String}
 * @readonly
 */
WorkflowAction['ShowOnEnum'] = {

    /**
     * value: "NEW"
     * @const
     */
    "NEW": "NEW",

    /**
     * value: "LOCKED"
     * @const
     */
    "LOCKED": "LOCKED",

    /**
     * value: "UNLOCKED"
     * @const
     */
    "UNLOCKED": "UNLOCKED",

    /**
     * value: "PUBLISHED"
     * @const
     */
    "PUBLISHED": "PUBLISHED",

    /**
     * value: "UNPUBLISHED"
     * @const
     */
    "UNPUBLISHED": "UNPUBLISHED",

    /**
     * value: "ARCHIVED"
     * @const
     */
    "ARCHIVED": "ARCHIVED",

    /**
     * value: "LISTING"
     * @const
     */
    "LISTING": "LISTING",

    /**
     * value: "EDITING"
     * @const
     */
    "EDITING": "EDITING"
};



export default WorkflowAction;

