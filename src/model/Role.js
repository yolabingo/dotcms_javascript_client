/**
 * dotCMS REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Role model module.
 * @module model/Role
 * @version 3
 */
class Role {
    /**
     * Constructs a new <code>Role</code>.
     * @alias module:model/Role
     */
    constructor() { 
        
        Role.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Role</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Role} obj Optional instance to populate.
     * @return {module:model/Role} The populated <code>Role</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Role();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('roleKey')) {
                obj['roleKey'] = ApiClient.convertToType(data['roleKey'], 'String');
            }
            if (data.hasOwnProperty('parent')) {
                obj['parent'] = ApiClient.convertToType(data['parent'], 'String');
            }
            if (data.hasOwnProperty('editPermissions')) {
                obj['editPermissions'] = ApiClient.convertToType(data['editPermissions'], 'Boolean');
            }
            if (data.hasOwnProperty('editUsers')) {
                obj['editUsers'] = ApiClient.convertToType(data['editUsers'], 'Boolean');
            }
            if (data.hasOwnProperty('editLayouts')) {
                obj['editLayouts'] = ApiClient.convertToType(data['editLayouts'], 'Boolean');
            }
            if (data.hasOwnProperty('locked')) {
                obj['locked'] = ApiClient.convertToType(data['locked'], 'Boolean');
            }
            if (data.hasOwnProperty('system')) {
                obj['system'] = ApiClient.convertToType(data['system'], 'Boolean');
            }
            if (data.hasOwnProperty('roleChildren')) {
                obj['roleChildren'] = ApiClient.convertToType(data['roleChildren'], ['String']);
            }
            if (data.hasOwnProperty('fqn')) {
                obj['fqn'] = ApiClient.convertToType(data['fqn'], 'String');
            }
            if (data.hasOwnProperty('dbfqn')) {
                obj['dbfqn'] = ApiClient.convertToType(data['dbfqn'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Role</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Role</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['roleKey'] && !(typeof data['roleKey'] === 'string' || data['roleKey'] instanceof String)) {
            throw new Error("Expected the field `roleKey` to be a primitive type in the JSON string but got " + data['roleKey']);
        }
        // ensure the json data is a string
        if (data['parent'] && !(typeof data['parent'] === 'string' || data['parent'] instanceof String)) {
            throw new Error("Expected the field `parent` to be a primitive type in the JSON string but got " + data['parent']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['roleChildren'])) {
            throw new Error("Expected the field `roleChildren` to be an array in the JSON data but got " + data['roleChildren']);
        }
        // ensure the json data is a string
        if (data['fqn'] && !(typeof data['fqn'] === 'string' || data['fqn'] instanceof String)) {
            throw new Error("Expected the field `fqn` to be a primitive type in the JSON string but got " + data['fqn']);
        }
        // ensure the json data is a string
        if (data['dbfqn'] && !(typeof data['dbfqn'] === 'string' || data['dbfqn'] instanceof String)) {
            throw new Error("Expected the field `dbfqn` to be a primitive type in the JSON string but got " + data['dbfqn']);
        }

        return true;
    }


}



/**
 * @member {String} id
 */
Role.prototype['id'] = undefined;

/**
 * @member {String} name
 */
Role.prototype['name'] = undefined;

/**
 * @member {String} description
 */
Role.prototype['description'] = undefined;

/**
 * @member {String} roleKey
 */
Role.prototype['roleKey'] = undefined;

/**
 * @member {String} parent
 */
Role.prototype['parent'] = undefined;

/**
 * @member {Boolean} editPermissions
 */
Role.prototype['editPermissions'] = undefined;

/**
 * @member {Boolean} editUsers
 */
Role.prototype['editUsers'] = undefined;

/**
 * @member {Boolean} editLayouts
 */
Role.prototype['editLayouts'] = undefined;

/**
 * @member {Boolean} locked
 */
Role.prototype['locked'] = undefined;

/**
 * @member {Boolean} system
 */
Role.prototype['system'] = undefined;

/**
 * @member {Array.<String>} roleChildren
 */
Role.prototype['roleChildren'] = undefined;

/**
 * @member {String} fqn
 */
Role.prototype['fqn'] = undefined;

/**
 * @member {String} dbfqn
 */
Role.prototype['dbfqn'] = undefined;

/**
 * @member {Boolean} user
 */
Role.prototype['user'] = undefined;






export default Role;

