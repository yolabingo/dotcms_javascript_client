/**
 * dotCMS REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WorkflowActionletParameter from './WorkflowActionletParameter';

/**
 * The WorkFlowActionlet model module.
 * @module model/WorkFlowActionlet
 * @version 3
 */
class WorkFlowActionlet {
    /**
     * Constructs a new <code>WorkFlowActionlet</code>.
     * @alias module:model/WorkFlowActionlet
     */
    constructor() { 
        
        WorkFlowActionlet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WorkFlowActionlet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkFlowActionlet} obj Optional instance to populate.
     * @return {module:model/WorkFlowActionlet} The populated <code>WorkFlowActionlet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkFlowActionlet();

            if (data.hasOwnProperty('localizedHowto')) {
                obj['localizedHowto'] = ApiClient.convertToType(data['localizedHowto'], 'String');
            }
            if (data.hasOwnProperty('howTo')) {
                obj['howTo'] = ApiClient.convertToType(data['howTo'], 'String');
            }
            if (data.hasOwnProperty('actionClass')) {
                obj['actionClass'] = ApiClient.convertToType(data['actionClass'], 'String');
            }
            if (data.hasOwnProperty('localizedName')) {
                obj['localizedName'] = ApiClient.convertToType(data['localizedName'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], [WorkflowActionletParameter]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkFlowActionlet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkFlowActionlet</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['localizedHowto'] && !(typeof data['localizedHowto'] === 'string' || data['localizedHowto'] instanceof String)) {
            throw new Error("Expected the field `localizedHowto` to be a primitive type in the JSON string but got " + data['localizedHowto']);
        }
        // ensure the json data is a string
        if (data['howTo'] && !(typeof data['howTo'] === 'string' || data['howTo'] instanceof String)) {
            throw new Error("Expected the field `howTo` to be a primitive type in the JSON string but got " + data['howTo']);
        }
        // ensure the json data is a string
        if (data['actionClass'] && !(typeof data['actionClass'] === 'string' || data['actionClass'] instanceof String)) {
            throw new Error("Expected the field `actionClass` to be a primitive type in the JSON string but got " + data['actionClass']);
        }
        // ensure the json data is a string
        if (data['localizedName'] && !(typeof data['localizedName'] === 'string' || data['localizedName'] instanceof String)) {
            throw new Error("Expected the field `localizedName` to be a primitive type in the JSON string but got " + data['localizedName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['parameters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['parameters'])) {
                throw new Error("Expected the field `parameters` to be an array in the JSON data but got " + data['parameters']);
            }
            // validate the optional field `parameters` (array)
            for (const item of data['parameters']) {
                WorkflowActionletParameter.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} localizedHowto
 */
WorkFlowActionlet.prototype['localizedHowto'] = undefined;

/**
 * @member {String} howTo
 */
WorkFlowActionlet.prototype['howTo'] = undefined;

/**
 * @member {String} actionClass
 */
WorkFlowActionlet.prototype['actionClass'] = undefined;

/**
 * @member {String} localizedName
 */
WorkFlowActionlet.prototype['localizedName'] = undefined;

/**
 * @member {String} name
 */
WorkFlowActionlet.prototype['name'] = undefined;

/**
 * @member {Array.<module:model/WorkflowActionletParameter>} parameters
 */
WorkFlowActionlet.prototype['parameters'] = undefined;






export default WorkFlowActionlet;

