/**
 * dotCMS REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RemoteUrlForm model module.
 * @module model/RemoteUrlForm
 * @version 3
 */
class RemoteUrlForm {
    /**
     * Constructs a new <code>RemoteUrlForm</code>.
     * @alias module:model/RemoteUrlForm
     */
    constructor() { 
        
        RemoteUrlForm.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RemoteUrlForm</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RemoteUrlForm} obj Optional instance to populate.
     * @return {module:model/RemoteUrlForm} The populated <code>RemoteUrlForm</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RemoteUrlForm();

            if (data.hasOwnProperty('remoteUrl')) {
                obj['remoteUrl'] = ApiClient.convertToType(data['remoteUrl'], 'String');
            }
            if (data.hasOwnProperty('fileName')) {
                obj['fileName'] = ApiClient.convertToType(data['fileName'], 'String');
            }
            if (data.hasOwnProperty('accessKey')) {
                obj['accessKey'] = ApiClient.convertToType(data['accessKey'], 'String');
            }
            if (data.hasOwnProperty('urlTimeoutSeconds')) {
                obj['urlTimeoutSeconds'] = ApiClient.convertToType(data['urlTimeoutSeconds'], 'Number');
            }
            if (data.hasOwnProperty('maxFileLength')) {
                obj['maxFileLength'] = ApiClient.convertToType(data['maxFileLength'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RemoteUrlForm</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RemoteUrlForm</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['remoteUrl'] && !(typeof data['remoteUrl'] === 'string' || data['remoteUrl'] instanceof String)) {
            throw new Error("Expected the field `remoteUrl` to be a primitive type in the JSON string but got " + data['remoteUrl']);
        }
        // ensure the json data is a string
        if (data['fileName'] && !(typeof data['fileName'] === 'string' || data['fileName'] instanceof String)) {
            throw new Error("Expected the field `fileName` to be a primitive type in the JSON string but got " + data['fileName']);
        }
        // ensure the json data is a string
        if (data['accessKey'] && !(typeof data['accessKey'] === 'string' || data['accessKey'] instanceof String)) {
            throw new Error("Expected the field `accessKey` to be a primitive type in the JSON string but got " + data['accessKey']);
        }

        return true;
    }


}



/**
 * @member {String} remoteUrl
 */
RemoteUrlForm.prototype['remoteUrl'] = undefined;

/**
 * @member {String} fileName
 */
RemoteUrlForm.prototype['fileName'] = undefined;

/**
 * @member {String} accessKey
 */
RemoteUrlForm.prototype['accessKey'] = undefined;

/**
 * @member {Number} urlTimeoutSeconds
 */
RemoteUrlForm.prototype['urlTimeoutSeconds'] = undefined;

/**
 * @member {Number} maxFileLength
 */
RemoteUrlForm.prototype['maxFileLength'] = undefined;






export default RemoteUrlForm;

