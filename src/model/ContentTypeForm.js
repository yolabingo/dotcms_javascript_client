/**
 * dotCMS REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContentType from './ContentType';
import Tuple2SystemActionString from './Tuple2SystemActionString';

/**
 * The ContentTypeForm model module.
 * @module model/ContentTypeForm
 * @version 3
 */
class ContentTypeForm {
    /**
     * Constructs a new <code>ContentTypeForm</code>.
     * @alias module:model/ContentTypeForm
     */
    constructor() { 
        
        ContentTypeForm.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContentTypeForm</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContentTypeForm} obj Optional instance to populate.
     * @return {module:model/ContentTypeForm} The populated <code>ContentTypeForm</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContentTypeForm();

            if (data.hasOwnProperty('requestJson')) {
                obj['requestJson'] = ApiClient.convertToType(data['requestJson'], Object);
            }
            if (data.hasOwnProperty('contentType')) {
                obj['contentType'] = ContentType.constructFromObject(data['contentType']);
            }
            if (data.hasOwnProperty('iterable')) {
                obj['iterable'] = ApiClient.convertToType(data['iterable'], Object);
            }
            if (data.hasOwnProperty('systemActions')) {
                obj['systemActions'] = ApiClient.convertToType(data['systemActions'], [Tuple2SystemActionString]);
            }
            if (data.hasOwnProperty('workflowsIds')) {
                obj['workflowsIds'] = ApiClient.convertToType(data['workflowsIds'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContentTypeForm</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContentTypeForm</code>.
     */
    static validateJSON(data) {
        // validate the optional field `contentType`
        if (data['contentType']) { // data not null
          ContentType.validateJSON(data['contentType']);
        }
        if (data['systemActions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['systemActions'])) {
                throw new Error("Expected the field `systemActions` to be an array in the JSON data but got " + data['systemActions']);
            }
            // validate the optional field `systemActions` (array)
            for (const item of data['systemActions']) {
                Tuple2SystemActionString.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['workflowsIds'])) {
            throw new Error("Expected the field `workflowsIds` to be an array in the JSON data but got " + data['workflowsIds']);
        }

        return true;
    }


}



/**
 * @member {Object} requestJson
 */
ContentTypeForm.prototype['requestJson'] = undefined;

/**
 * @member {module:model/ContentType} contentType
 */
ContentTypeForm.prototype['contentType'] = undefined;

/**
 * @member {Object} iterable
 */
ContentTypeForm.prototype['iterable'] = undefined;

/**
 * @member {Array.<module:model/Tuple2SystemActionString>} systemActions
 */
ContentTypeForm.prototype['systemActions'] = undefined;

/**
 * @member {Array.<String>} workflowsIds
 */
ContentTypeForm.prototype['workflowsIds'] = undefined;






export default ContentTypeForm;

