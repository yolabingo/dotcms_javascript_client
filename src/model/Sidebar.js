/**
 * dotCMS REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContainerUUID from './ContainerUUID';

/**
 * The Sidebar model module.
 * @module model/Sidebar
 * @version 3
 */
class Sidebar {
    /**
     * Constructs a new <code>Sidebar</code>.
     * @alias module:model/Sidebar
     */
    constructor() { 
        
        Sidebar.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Sidebar</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Sidebar} obj Optional instance to populate.
     * @return {module:model/Sidebar} The populated <code>Sidebar</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Sidebar();

            if (data.hasOwnProperty('containers')) {
                obj['containers'] = ApiClient.convertToType(data['containers'], [ContainerUUID]);
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'String');
            }
            if (data.hasOwnProperty('widthPercent')) {
                obj['widthPercent'] = ApiClient.convertToType(data['widthPercent'], 'Number');
            }
            if (data.hasOwnProperty('preview')) {
                obj['preview'] = ApiClient.convertToType(data['preview'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Sidebar</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Sidebar</code>.
     */
    static validateJSON(data) {
        if (data['containers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['containers'])) {
                throw new Error("Expected the field `containers` to be an array in the JSON data but got " + data['containers']);
            }
            // validate the optional field `containers` (array)
            for (const item of data['containers']) {
                ContainerUUID.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['width'] && !(typeof data['width'] === 'string' || data['width'] instanceof String)) {
            throw new Error("Expected the field `width` to be a primitive type in the JSON string but got " + data['width']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/ContainerUUID>} containers
 */
Sidebar.prototype['containers'] = undefined;

/**
 * @member {String} location
 */
Sidebar.prototype['location'] = undefined;

/**
 * @member {String} width
 */
Sidebar.prototype['width'] = undefined;

/**
 * @member {Number} widthPercent
 */
Sidebar.prototype['widthPercent'] = undefined;

/**
 * @member {Boolean} preview
 */
Sidebar.prototype['preview'] = undefined;






export default Sidebar;

