/**
 * dotCMS REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateTokenForm model module.
 * @module model/CreateTokenForm
 * @version 3
 */
class CreateTokenForm {
    /**
     * Constructs a new <code>CreateTokenForm</code>.
     * @alias module:model/CreateTokenForm
     * @param user {String} 
     * @param password {String} 
     */
    constructor(user, password) { 
        
        CreateTokenForm.initialize(this, user, password);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, user, password) { 
        obj['user'] = user;
        obj['password'] = password;
    }

    /**
     * Constructs a <code>CreateTokenForm</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateTokenForm} obj Optional instance to populate.
     * @return {module:model/CreateTokenForm} The populated <code>CreateTokenForm</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateTokenForm();

            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('expirationDays')) {
                obj['expirationDays'] = ApiClient.convertToType(data['expirationDays'], 'Number');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateTokenForm</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateTokenForm</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateTokenForm.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['user'] && !(typeof data['user'] === 'string' || data['user'] instanceof String)) {
            throw new Error("Expected the field `user` to be a primitive type in the JSON string but got " + data['user']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }

        return true;
    }


}

CreateTokenForm.RequiredProperties = ["user", "password"];

/**
 * @member {String} user
 */
CreateTokenForm.prototype['user'] = undefined;

/**
 * @member {String} password
 */
CreateTokenForm.prototype['password'] = undefined;

/**
 * @member {Number} expirationDays
 */
CreateTokenForm.prototype['expirationDays'] = undefined;

/**
 * @member {String} label
 */
CreateTokenForm.prototype['label'] = undefined;






export default CreateTokenForm;

