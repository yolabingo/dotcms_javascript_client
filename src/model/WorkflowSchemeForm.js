/**
 * dotCMS REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WorkflowSchemeForm model module.
 * @module model/WorkflowSchemeForm
 * @version 3
 */
class WorkflowSchemeForm {
    /**
     * Constructs a new <code>WorkflowSchemeForm</code>.
     * @alias module:model/WorkflowSchemeForm
     * @param schemeName {String} 
     */
    constructor(schemeName) { 
        
        WorkflowSchemeForm.initialize(this, schemeName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, schemeName) { 
        obj['schemeName'] = schemeName;
    }

    /**
     * Constructs a <code>WorkflowSchemeForm</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkflowSchemeForm} obj Optional instance to populate.
     * @return {module:model/WorkflowSchemeForm} The populated <code>WorkflowSchemeForm</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkflowSchemeForm();

            if (data.hasOwnProperty('schemeName')) {
                obj['schemeName'] = ApiClient.convertToType(data['schemeName'], 'String');
            }
            if (data.hasOwnProperty('schemeDescription')) {
                obj['schemeDescription'] = ApiClient.convertToType(data['schemeDescription'], 'String');
            }
            if (data.hasOwnProperty('schemeArchived')) {
                obj['schemeArchived'] = ApiClient.convertToType(data['schemeArchived'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkflowSchemeForm</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkflowSchemeForm</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WorkflowSchemeForm.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['schemeName'] && !(typeof data['schemeName'] === 'string' || data['schemeName'] instanceof String)) {
            throw new Error("Expected the field `schemeName` to be a primitive type in the JSON string but got " + data['schemeName']);
        }
        // ensure the json data is a string
        if (data['schemeDescription'] && !(typeof data['schemeDescription'] === 'string' || data['schemeDescription'] instanceof String)) {
            throw new Error("Expected the field `schemeDescription` to be a primitive type in the JSON string but got " + data['schemeDescription']);
        }

        return true;
    }


}

WorkflowSchemeForm.RequiredProperties = ["schemeName"];

/**
 * @member {String} schemeName
 */
WorkflowSchemeForm.prototype['schemeName'] = undefined;

/**
 * @member {String} schemeDescription
 */
WorkflowSchemeForm.prototype['schemeDescription'] = undefined;

/**
 * @member {Boolean} schemeArchived
 */
WorkflowSchemeForm.prototype['schemeArchived'] = undefined;






export default WorkflowSchemeForm;

