/**
 * dotCMS REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PersonalizationPersonaPageForm model module.
 * @module model/PersonalizationPersonaPageForm
 * @version 3
 */
class PersonalizationPersonaPageForm {
    /**
     * Constructs a new <code>PersonalizationPersonaPageForm</code>.
     * @alias module:model/PersonalizationPersonaPageForm
     * @param pageId {String} 
     * @param personaTag {String} 
     */
    constructor(pageId, personaTag) { 
        
        PersonalizationPersonaPageForm.initialize(this, pageId, personaTag);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pageId, personaTag) { 
        obj['pageId'] = pageId;
        obj['personaTag'] = personaTag;
    }

    /**
     * Constructs a <code>PersonalizationPersonaPageForm</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PersonalizationPersonaPageForm} obj Optional instance to populate.
     * @return {module:model/PersonalizationPersonaPageForm} The populated <code>PersonalizationPersonaPageForm</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PersonalizationPersonaPageForm();

            if (data.hasOwnProperty('pageId')) {
                obj['pageId'] = ApiClient.convertToType(data['pageId'], 'String');
            }
            if (data.hasOwnProperty('personaTag')) {
                obj['personaTag'] = ApiClient.convertToType(data['personaTag'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PersonalizationPersonaPageForm</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PersonalizationPersonaPageForm</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PersonalizationPersonaPageForm.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['pageId'] && !(typeof data['pageId'] === 'string' || data['pageId'] instanceof String)) {
            throw new Error("Expected the field `pageId` to be a primitive type in the JSON string but got " + data['pageId']);
        }
        // ensure the json data is a string
        if (data['personaTag'] && !(typeof data['personaTag'] === 'string' || data['personaTag'] instanceof String)) {
            throw new Error("Expected the field `personaTag` to be a primitive type in the JSON string but got " + data['personaTag']);
        }

        return true;
    }


}

PersonalizationPersonaPageForm.RequiredProperties = ["pageId", "personaTag"];

/**
 * @member {String} pageId
 */
PersonalizationPersonaPageForm.prototype['pageId'] = undefined;

/**
 * @member {String} personaTag
 */
PersonalizationPersonaPageForm.prototype['personaTag'] = undefined;






export default PersonalizationPersonaPageForm;

