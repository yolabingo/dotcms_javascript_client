/**
 * dotCMS REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Body from './Body';
import Sidebar from './Sidebar';
import TemplateLayoutRow from './TemplateLayoutRow';

/**
 * The TemplateLayout model module.
 * @module model/TemplateLayout
 * @version 3
 */
class TemplateLayout {
    /**
     * Constructs a new <code>TemplateLayout</code>.
     * @alias module:model/TemplateLayout
     */
    constructor() { 
        
        TemplateLayout.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TemplateLayout</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TemplateLayout} obj Optional instance to populate.
     * @return {module:model/TemplateLayout} The populated <code>TemplateLayout</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TemplateLayout();

            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('header')) {
                obj['header'] = ApiClient.convertToType(data['header'], 'Boolean');
            }
            if (data.hasOwnProperty('footer')) {
                obj['footer'] = ApiClient.convertToType(data['footer'], 'Boolean');
            }
            if (data.hasOwnProperty('body')) {
                obj['body'] = Body.constructFromObject(data['body']);
            }
            if (data.hasOwnProperty('sidebar')) {
                obj['sidebar'] = Sidebar.constructFromObject(data['sidebar']);
            }
            if (data.hasOwnProperty('bodyRows')) {
                obj['bodyRows'] = ApiClient.convertToType(data['bodyRows'], [TemplateLayoutRow]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TemplateLayout</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TemplateLayout</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['width'] && !(typeof data['width'] === 'string' || data['width'] instanceof String)) {
            throw new Error("Expected the field `width` to be a primitive type in the JSON string but got " + data['width']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // validate the optional field `body`
        if (data['body']) { // data not null
          Body.validateJSON(data['body']);
        }
        // validate the optional field `sidebar`
        if (data['sidebar']) { // data not null
          Sidebar.validateJSON(data['sidebar']);
        }
        if (data['bodyRows']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['bodyRows'])) {
                throw new Error("Expected the field `bodyRows` to be an array in the JSON data but got " + data['bodyRows']);
            }
            // validate the optional field `bodyRows` (array)
            for (const item of data['bodyRows']) {
                TemplateLayoutRow.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} width
 */
TemplateLayout.prototype['width'] = undefined;

/**
 * @member {String} title
 */
TemplateLayout.prototype['title'] = undefined;

/**
 * @member {Boolean} header
 */
TemplateLayout.prototype['header'] = undefined;

/**
 * @member {Boolean} footer
 */
TemplateLayout.prototype['footer'] = undefined;

/**
 * @member {module:model/Body} body
 */
TemplateLayout.prototype['body'] = undefined;

/**
 * @member {module:model/Sidebar} sidebar
 */
TemplateLayout.prototype['sidebar'] = undefined;

/**
 * @member {Array.<module:model/TemplateLayoutRow>} bodyRows
 */
TemplateLayout.prototype['bodyRows'] = undefined;






export default TemplateLayout;

