/**
 * dotCMS REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FilterDescriptorForm model module.
 * @module model/FilterDescriptorForm
 * @version 3
 */
class FilterDescriptorForm {
    /**
     * Constructs a new <code>FilterDescriptorForm</code>.
     * @alias module:model/FilterDescriptorForm
     */
    constructor() { 
        
        FilterDescriptorForm.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FilterDescriptorForm</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FilterDescriptorForm} obj Optional instance to populate.
     * @return {module:model/FilterDescriptorForm} The populated <code>FilterDescriptorForm</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FilterDescriptorForm();

            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('sort')) {
                obj['sort'] = ApiClient.convertToType(data['sort'], 'String');
            }
            if (data.hasOwnProperty('defaultFilter')) {
                obj['defaultFilter'] = ApiClient.convertToType(data['defaultFilter'], 'Boolean');
            }
            if (data.hasOwnProperty('roles')) {
                obj['roles'] = ApiClient.convertToType(data['roles'], 'String');
            }
            if (data.hasOwnProperty('filters')) {
                obj['filters'] = ApiClient.convertToType(data['filters'], {'String': Object});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FilterDescriptorForm</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FilterDescriptorForm</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['sort'] && !(typeof data['sort'] === 'string' || data['sort'] instanceof String)) {
            throw new Error("Expected the field `sort` to be a primitive type in the JSON string but got " + data['sort']);
        }
        // ensure the json data is a string
        if (data['roles'] && !(typeof data['roles'] === 'string' || data['roles'] instanceof String)) {
            throw new Error("Expected the field `roles` to be a primitive type in the JSON string but got " + data['roles']);
        }

        return true;
    }


}



/**
 * @member {String} key
 */
FilterDescriptorForm.prototype['key'] = undefined;

/**
 * @member {String} title
 */
FilterDescriptorForm.prototype['title'] = undefined;

/**
 * @member {String} sort
 */
FilterDescriptorForm.prototype['sort'] = undefined;

/**
 * @member {Boolean} defaultFilter
 */
FilterDescriptorForm.prototype['defaultFilter'] = undefined;

/**
 * @member {String} roles
 */
FilterDescriptorForm.prototype['roles'] = undefined;

/**
 * @member {Object.<String, Object>} filters
 */
FilterDescriptorForm.prototype['filters'] = undefined;






export default FilterDescriptorForm;

