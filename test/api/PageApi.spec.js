/**
 * dotCMS REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DotCmsRestApi);
  }
}(this, function(expect, DotCmsRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DotCmsRestApi.PageApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PageApi', function() {
    describe('addContent', function() {
      it('should call addContent successfully', function(done) {
        //uncomment below and update the code to test addContent
        //instance.addContent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('copyContent', function() {
      it('should call copyContent successfully', function(done) {
        //uncomment below and update the code to test copyContent
        //instance.copyContent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deepCopyPage', function() {
      it('should call deepCopyPage successfully', function(done) {
        //uncomment below and update the code to test deepCopyPage
        //instance.deepCopyPage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContentTree', function() {
      it('should call getContentTree successfully', function(done) {
        //uncomment below and update the code to test getContentTree
        //instance.getContentTree(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getHtmlVersionsPage', function() {
      it('should call getHtmlVersionsPage successfully', function(done) {
        //uncomment below and update the code to test getHtmlVersionsPage
        //instance.getHtmlVersionsPage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPersonalizedPersonasOnPage', function() {
      it('should call getPersonalizedPersonasOnPage successfully', function(done) {
        //uncomment below and update the code to test getPersonalizedPersonasOnPage
        //instance.getPersonalizedPersonasOnPage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loadJson2', function() {
      it('should call loadJson2 successfully', function(done) {
        //uncomment below and update the code to test loadJson2
        //instance.loadJson2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('render', function() {
      it('should call render successfully', function(done) {
        //uncomment below and update the code to test render
        //instance.render(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('renderHTMLOnly', function() {
      it('should call renderHTMLOnly successfully', function(done) {
        //uncomment below and update the code to test renderHTMLOnly
        //instance.renderHTMLOnly(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('saveLayout', function() {
      it('should call saveLayout successfully', function(done) {
        //uncomment below and update the code to test saveLayout
        //instance.saveLayout(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('saveLayout1', function() {
      it('should call saveLayout1 successfully', function(done) {
        //uncomment below and update the code to test saveLayout1
        //instance.saveLayout1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchPage', function() {
      it('should call searchPage successfully', function(done) {
        //uncomment below and update the code to test searchPage
        //instance.searchPage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
