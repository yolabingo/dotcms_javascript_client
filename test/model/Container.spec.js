/**
 * dotCMS REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DotCmsRestApi);
  }
}(this, function(expect, DotCmsRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DotCmsRestApi.Container();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Container', function() {
    it('should create an instance of Container', function() {
      // uncomment below and update the code to test Container
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be.a(DotCmsRestApi.Container);
    });

    it('should have the property getiDate (base name: "getiDate")', function() {
      // uncomment below and update the code to test the property getiDate
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property owner (base name: "owner")', function() {
      // uncomment below and update the code to test the property owner
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property inode (base name: "inode")', function() {
      // uncomment below and update the code to test the property inode
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property identifier (base name: "identifier")', function() {
      // uncomment below and update the code to test the property identifier
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property friendlyName (base name: "friendlyName")', function() {
      // uncomment below and update the code to test the property friendlyName
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property modDate (base name: "modDate")', function() {
      // uncomment below and update the code to test the property modDate
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property modUser (base name: "modUser")', function() {
      // uncomment below and update the code to test the property modUser
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property sortOrder (base name: "sortOrder")', function() {
      // uncomment below and update the code to test the property sortOrder
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property showOnMenu (base name: "showOnMenu")', function() {
      // uncomment below and update the code to test the property showOnMenu
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property code (base name: "code")', function() {
      // uncomment below and update the code to test the property code
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property maxContentlets (base name: "maxContentlets")', function() {
      // uncomment below and update the code to test the property maxContentlets
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property useDiv (base name: "useDiv")', function() {
      // uncomment below and update the code to test the property useDiv
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property sortContentletsBy (base name: "sortContentletsBy")', function() {
      // uncomment below and update the code to test the property sortContentletsBy
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property preLoop (base name: "preLoop")', function() {
      // uncomment below and update the code to test the property preLoop
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property postLoop (base name: "postLoop")', function() {
      // uncomment below and update the code to test the property postLoop
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property staticify (base name: "staticify")', function() {
      // uncomment below and update the code to test the property staticify
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property luceneQuery (base name: "luceneQuery")', function() {
      // uncomment below and update the code to test the property luceneQuery
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property parentPermissionable (base name: "parentPermissionable")', function() {
      // uncomment below and update the code to test the property parentPermissionable
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property live (base name: "live")', function() {
      // uncomment below and update the code to test the property live
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property deleted (base name: "deleted")', function() {
      // uncomment below and update the code to test the property deleted
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property working (base name: "working")', function() {
      // uncomment below and update the code to test the property working
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property archived (base name: "archived")', function() {
      // uncomment below and update the code to test the property archived
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property versionType (base name: "versionType")', function() {
      // uncomment below and update the code to test the property versionType
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property permissionId (base name: "permissionId")', function() {
      // uncomment below and update the code to test the property permissionId
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property versionId (base name: "versionId")', function() {
      // uncomment below and update the code to test the property versionId
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property locked (base name: "locked")', function() {
      // uncomment below and update the code to test the property locked
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property permissionType (base name: "permissionType")', function() {
      // uncomment below and update the code to test the property permissionType
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property _new (base name: "new")', function() {
      // uncomment below and update the code to test the property _new
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property parents (base name: "parents")', function() {
      // uncomment below and update the code to test the property parents
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property categoryId (base name: "categoryId")', function() {
      // uncomment below and update the code to test the property categoryId
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

    it('should have the property idate (base name: "idate")', function() {
      // uncomment below and update the code to test the property idate
      //var instance = new DotCmsRestApi.Container();
      //expect(instance).to.be();
    });

  });

}));
