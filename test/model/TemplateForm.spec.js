/**
 * dotCMS REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DotCmsRestApi);
  }
}(this, function(expect, DotCmsRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DotCmsRestApi.TemplateForm();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TemplateForm', function() {
    it('should create an instance of TemplateForm', function() {
      // uncomment below and update the code to test TemplateForm
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be.a(DotCmsRestApi.TemplateForm);
    });

    it('should have the property siteId (base name: "siteId")', function() {
      // uncomment below and update the code to test the property siteId
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

    it('should have the property identifier (base name: "identifier")', function() {
      // uncomment below and update the code to test the property identifier
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

    it('should have the property inode (base name: "inode")', function() {
      // uncomment below and update the code to test the property inode
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

    it('should have the property body (base name: "body")', function() {
      // uncomment below and update the code to test the property body
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

    it('should have the property selectedimage (base name: "selectedimage")', function() {
      // uncomment below and update the code to test the property selectedimage
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

    it('should have the property image (base name: "image")', function() {
      // uncomment below and update the code to test the property image
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

    it('should have the property drawed (base name: "drawed")', function() {
      // uncomment below and update the code to test the property drawed
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

    it('should have the property showOnMenu (base name: "showOnMenu")', function() {
      // uncomment below and update the code to test the property showOnMenu
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

    it('should have the property drawedBody (base name: "drawedBody")', function() {
      // uncomment below and update the code to test the property drawedBody
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

    it('should have the property countAddContainer (base name: "countAddContainer")', function() {
      // uncomment below and update the code to test the property countAddContainer
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

    it('should have the property countContainers (base name: "countContainers")', function() {
      // uncomment below and update the code to test the property countContainers
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

    it('should have the property headCode (base name: "headCode")', function() {
      // uncomment below and update the code to test the property headCode
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

    it('should have the property theme (base name: "theme")', function() {
      // uncomment below and update the code to test the property theme
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

    it('should have the property themeName (base name: "themeName")', function() {
      // uncomment below and update the code to test the property themeName
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

    it('should have the property footer (base name: "footer")', function() {
      // uncomment below and update the code to test the property footer
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

    it('should have the property friendlyName (base name: "friendlyName")', function() {
      // uncomment below and update the code to test the property friendlyName
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

    it('should have the property header (base name: "header")', function() {
      // uncomment below and update the code to test the property header
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

    it('should have the property sortOrder (base name: "sortOrder")', function() {
      // uncomment below and update the code to test the property sortOrder
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

    it('should have the property headerCheck (base name: "headerCheck")', function() {
      // uncomment below and update the code to test the property headerCheck
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

    it('should have the property footerCheck (base name: "footerCheck")', function() {
      // uncomment below and update the code to test the property footerCheck
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

    it('should have the property layout (base name: "layout")', function() {
      // uncomment below and update the code to test the property layout
      //var instance = new DotCmsRestApi.TemplateForm();
      //expect(instance).to.be();
    });

  });

}));
